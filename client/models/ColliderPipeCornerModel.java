// Date: 05/02/2014 21:04:46
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package opticraft.client.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ColliderPipeCornerModel extends ModelBase {
	// fields
	ModelRenderer Bottom;
	ModelRenderer Top;
	ModelRenderer Right;
	ModelRenderer Left;
	ModelRenderer LeftPannel;
	ModelRenderer RightPannel;
	ModelRenderer TopPannel;
	ModelRenderer BottomPannel;
	ModelRenderer UpRight;
	ModelRenderer UpLeft;
	ModelRenderer BottomRight;
	ModelRenderer BottomLeft;
	ModelRenderer TopFrontBar;
	ModelRenderer LeftFrontBar;
	ModelRenderer LeftUpFrontBarOne;
	ModelRenderer LeftUpFrontBarTwo;
	ModelRenderer LeftBottomFrontBarOne;
	ModelRenderer TopPannel2;
	ModelRenderer BottomPannel2;
	ModelRenderer UpRight2;
	ModelRenderer UpRight3;
	ModelRenderer Right2;
	ModelRenderer Right3;
	ModelRenderer UpRight4;
	ModelRenderer UpRight5;
	ModelRenderer RightPannel2;
	ModelRenderer RightPannel3;
	ModelRenderer LeftUpFrontBarTwo2;
	ModelRenderer LeftUpFrontBarOne3;
	ModelRenderer LeftFrontBar2;
	ModelRenderer LeftBottomFrontBarOne2;
	ModelRenderer LeftUpFrontBarOne2;
	ModelRenderer LeftUpFrontBarTwo3;
	ModelRenderer TopFrontBar2;

	public ColliderPipeCornerModel() {
		textureWidth = 190;
		textureHeight = 32;

		Bottom = new ModelRenderer(this, 0, 0);
		Bottom.addBox(0F, 0F, 0F, 13, 0, 13);
		Bottom.setRotationPoint(-5F, 22F, -5F);
		Bottom.setTextureSize(190, 32);
		Bottom.mirror = true;
		setRotation(Bottom, 0F, 0F, 0F);
		Top = new ModelRenderer(this, 129, 0);
		Top.addBox(0F, 0F, 0F, 13, 0, 13);
		Top.setRotationPoint(-5F, 10F, -5F);
		Top.setTextureSize(190, 32);
		Top.mirror = true;
		setRotation(Top, 0F, 0F, 0F);
		Right = new ModelRenderer(this, 0, 0);
		Right.addBox(0F, 0F, 0F, 0, 10, 14);
		Right.setRotationPoint(-6F, 11F, -6F);
		Right.setTextureSize(190, 32);
		Right.mirror = true;
		setRotation(Right, 0F, 0F, 0F);
		Left = new ModelRenderer(this, 32, 0);
		Left.addBox(0F, 0F, 0F, 0, 10, 14);
		Left.setRotationPoint(-6F, 11F, -6F);
		Left.setTextureSize(190, 32);
		Left.mirror = true;
		setRotation(Left, 0F, 1.570796F, 0F);
		LeftPannel = new ModelRenderer(this, 154, 0);
		LeftPannel.addBox(0F, 0F, 0F, 1, 6, 15);
		LeftPannel.setRotationPoint(-7F, 13F, -6F);
		LeftPannel.setTextureSize(190, 32);
		LeftPannel.mirror = true;
		setRotation(LeftPannel, 0F, 1.570796F, 0F);
		RightPannel = new ModelRenderer(this, 154, 0);
		RightPannel.addBox(0F, 0F, 0F, 1, 6, 15);
		RightPannel.setRotationPoint(-7F, 13F, -7F);
		RightPannel.setTextureSize(190, 32);
		RightPannel.mirror = true;
		setRotation(RightPannel, 0F, 0F, 0F);
		TopPannel = new ModelRenderer(this, 54, 0);
		TopPannel.addBox(0F, 0F, 0F, 6, 1, 11);
		TopPannel.setRotationPoint(-3F, 9F, -3F);
		TopPannel.setTextureSize(190, 32);
		TopPannel.mirror = true;
		setRotation(TopPannel, 0F, 0F, 0F);
		BottomPannel = new ModelRenderer(this, 54, 0);
		BottomPannel.addBox(0F, 0F, 0F, 6, 1, 11);
		BottomPannel.setRotationPoint(-3F, 22F, -3F);
		BottomPannel.setTextureSize(190, 32);
		BottomPannel.mirror = true;
		setRotation(BottomPannel, 0F, 0F, 0F);
		UpRight = new ModelRenderer(this, 82, 12);
		UpRight.addBox(0F, 0F, 0F, 1, 1, 13);
		UpRight.setRotationPoint(-6F, 10F, -5F);
		UpRight.setTextureSize(190, 32);
		UpRight.mirror = true;
		setRotation(UpRight, 0F, 0F, 0F);
		UpLeft = new ModelRenderer(this, 100, 13);
		UpLeft.addBox(0F, 0F, 0F, 1, 1, 13);
		UpLeft.setRotationPoint(-5F, 10F, -5F);
		UpLeft.setTextureSize(190, 32);
		UpLeft.mirror = true;
		setRotation(UpLeft, 0F, 1.570796F, 0F);
		BottomRight = new ModelRenderer(this, 118, 14);
		BottomRight.addBox(0F, 0F, 0F, 1, 1, 13);
		BottomRight.setRotationPoint(-6F, 21F, -5F);
		BottomRight.setTextureSize(190, 32);
		BottomRight.mirror = true;
		setRotation(BottomRight, 0F, 0F, 0F);
		BottomLeft = new ModelRenderer(this, 136, 15);
		BottomLeft.addBox(0F, 0F, 0F, 1, 1, 13);
		BottomLeft.setRotationPoint(-5F, 21F, -5F);
		BottomLeft.setTextureSize(190, 32);
		BottomLeft.mirror = true;
		setRotation(BottomLeft, 0F, 1.570796F, 0F);
		TopFrontBar = new ModelRenderer(this, 82, 0);
		TopFrontBar.addBox(0F, 0F, 0F, 1, 1, 8);
		TopFrontBar.setRotationPoint(7.5F, 8F, -4F);
		TopFrontBar.setTextureSize(190, 32);
		TopFrontBar.mirror = true;
		setRotation(TopFrontBar, 0F, 0F, 0F);
		LeftFrontBar = new ModelRenderer(this, 0, 0);
		LeftFrontBar.addBox(0F, 0F, 0F, 1, 8, 1);
		LeftFrontBar.setRotationPoint(7.5F, 12F, -8F);
		LeftFrontBar.setTextureSize(190, 32);
		LeftFrontBar.mirror = true;
		setRotation(LeftFrontBar, 0F, 0F, 0F);
		LeftUpFrontBarOne = new ModelRenderer(this, 9, 0);
		LeftUpFrontBarOne.addBox(0F, 0F, 0F, 1, 3, 1);
		LeftUpFrontBarOne.setRotationPoint(7.5F, 10F, -7F);
		LeftUpFrontBarOne.setTextureSize(190, 32);
		LeftUpFrontBarOne.mirror = true;
		setRotation(LeftUpFrontBarOne, 0F, 0F, 0F);
		LeftUpFrontBarTwo = new ModelRenderer(this, 0, 24);
		LeftUpFrontBarTwo.addBox(0F, 0F, 0F, 1, 1, 4);
		LeftUpFrontBarTwo.setRotationPoint(7.5F, 9F, -7F);
		LeftUpFrontBarTwo.setTextureSize(190, 32);
		LeftUpFrontBarTwo.mirror = true;
		setRotation(LeftUpFrontBarTwo, 0F, 0F, 0F);
		LeftBottomFrontBarOne = new ModelRenderer(this, 9, 4);
		LeftBottomFrontBarOne.addBox(0F, 0F, 0F, 1, 3, 1);
		LeftBottomFrontBarOne.setRotationPoint(7.5F, 19F, -7F);
		LeftBottomFrontBarOne.setTextureSize(190, 32);
		LeftBottomFrontBarOne.mirror = true;
		setRotation(LeftBottomFrontBarOne, 0F, 0F, 0F);
		TopPannel2 = new ModelRenderer(this, 100, 0);
		TopPannel2.addBox(0F, 0F, 0F, 5, 1, 6);
		TopPannel2.setRotationPoint(3F, 9F, -3F);
		TopPannel2.setTextureSize(190, 32);
		TopPannel2.mirror = true;
		setRotation(TopPannel2, 0F, 0F, 0F);
		BottomPannel2 = new ModelRenderer(this, 100, 0);
		BottomPannel2.addBox(0F, 0F, 0F, 5, 1, 6);
		BottomPannel2.setRotationPoint(3F, 22F, -3F);
		BottomPannel2.setTextureSize(190, 32);
		BottomPannel2.mirror = true;
		setRotation(BottomPannel2, 0F, 0F, 0F);
		UpRight2 = new ModelRenderer(this, 82, 12);
		UpRight2.addBox(0F, 0F, 0F, 1, 1, 2);
		UpRight2.setRotationPoint(5F, 10F, 6F);
		UpRight2.setTextureSize(190, 32);
		UpRight2.mirror = true;
		setRotation(UpRight2, 0F, 0F, 0F);
		UpRight3 = new ModelRenderer(this, 82, 12);
		UpRight3.addBox(0F, 0F, 0F, 2, 1, 1);
		UpRight3.setRotationPoint(6F, 10F, 5F);
		UpRight3.setTextureSize(190, 32);
		UpRight3.mirror = true;
		setRotation(UpRight3, 0F, 0F, 0F);
		Right2 = new ModelRenderer(this, 5, 0);
		Right2.addBox(0F, 0F, 0F, 0, 10, 2);
		Right2.setRotationPoint(6F, 11F, 6F);
		Right2.setTextureSize(190, 32);
		Right2.mirror = true;
		setRotation(Right2, 0F, 0F, 0F);
		Right3 = new ModelRenderer(this, 5, 0);
		Right3.addBox(0F, 0F, 0F, 2, 10, 0);
		Right3.setRotationPoint(6F, 11F, 6F);
		Right3.setTextureSize(190, 32);
		Right3.mirror = true;
		setRotation(Right3, 0F, 0F, 0F);
		UpRight4 = new ModelRenderer(this, 82, 12);
		UpRight4.addBox(0F, 0F, 0F, 1, 1, 2);
		UpRight4.setRotationPoint(5F, 21F, 6F);
		UpRight4.setTextureSize(190, 32);
		UpRight4.mirror = true;
		setRotation(UpRight4, 0F, 0F, 0F);
		UpRight5 = new ModelRenderer(this, 82, 12);
		UpRight5.addBox(0F, 0F, 0F, 2, 1, 1);
		UpRight5.setRotationPoint(6F, 21F, 5F);
		UpRight5.setTextureSize(190, 32);
		UpRight5.mirror = true;
		setRotation(UpRight5, 0F, 0F, 0F);
		RightPannel2 = new ModelRenderer(this, 58, 24);
		RightPannel2.addBox(0F, 0F, 0F, 1, 6, 2);
		RightPannel2.setRotationPoint(6F, 13F, 6F);
		RightPannel2.setTextureSize(190, 32);
		RightPannel2.mirror = true;
		setRotation(RightPannel2, 0F, 0F, 0F);
		RightPannel3 = new ModelRenderer(this, 58, 24);
		RightPannel3.addBox(0F, 0F, 0F, 2, 6, 1);
		RightPannel3.setRotationPoint(6F, 13F, 6F);
		RightPannel3.setTextureSize(190, 32);
		RightPannel3.mirror = true;
		setRotation(RightPannel3, 0F, 0F, 0F);
		LeftUpFrontBarTwo2 = new ModelRenderer(this, 0, 24);
		LeftUpFrontBarTwo2.addBox(0F, 0F, 0F, 1, 1, 4);
		LeftUpFrontBarTwo2.setRotationPoint(7.5F, 22F, 3F);
		LeftUpFrontBarTwo2.setTextureSize(190, 32);
		LeftUpFrontBarTwo2.mirror = true;
		setRotation(LeftUpFrontBarTwo2, 0F, 0F, 0F);
		LeftUpFrontBarOne3 = new ModelRenderer(this, 9, 0);
		LeftUpFrontBarOne3.addBox(0F, 0F, 0F, 1, 3, 1);
		LeftUpFrontBarOne3.setRotationPoint(7.5F, 10F, 6F);
		LeftUpFrontBarOne3.setTextureSize(190, 32);
		LeftUpFrontBarOne3.mirror = true;
		setRotation(LeftUpFrontBarOne3, 0F, 0F, 0F);
		LeftFrontBar2 = new ModelRenderer(this, 0, 0);
		LeftFrontBar2.addBox(0F, 0F, 0F, 1, 8, 1);
		LeftFrontBar2.setRotationPoint(7.5F, 12F, 7F);
		LeftFrontBar2.setTextureSize(190, 32);
		LeftFrontBar2.mirror = true;
		setRotation(LeftFrontBar2, 0F, 0F, 0F);
		LeftBottomFrontBarOne2 = new ModelRenderer(this, 9, 4);
		LeftBottomFrontBarOne2.addBox(0F, 0F, 0F, 1, 3, 1);
		LeftBottomFrontBarOne2.setRotationPoint(7.5F, 19F, 6F);
		LeftBottomFrontBarOne2.setTextureSize(190, 32);
		LeftBottomFrontBarOne2.mirror = true;
		setRotation(LeftBottomFrontBarOne2, 0F, 0F, 0F);
		LeftUpFrontBarOne2 = new ModelRenderer(this, 0, 24);
		LeftUpFrontBarOne2.addBox(0F, 0F, 0F, 1, 1, 4);
		LeftUpFrontBarOne2.setRotationPoint(7.5F, 22F, -7F);
		LeftUpFrontBarOne2.setTextureSize(190, 32);
		LeftUpFrontBarOne2.mirror = true;
		setRotation(LeftUpFrontBarOne2, 0F, 0F, 0F);
		LeftUpFrontBarTwo3 = new ModelRenderer(this, 0, 24);
		LeftUpFrontBarTwo3.addBox(0F, 0F, 0F, 1, 1, 4);
		LeftUpFrontBarTwo3.setRotationPoint(7.5F, 9F, 3F);
		LeftUpFrontBarTwo3.setTextureSize(190, 32);
		LeftUpFrontBarTwo3.mirror = true;
		setRotation(LeftUpFrontBarTwo3, 0F, 0F, 0F);
		TopFrontBar2 = new ModelRenderer(this, 82, 0);
		TopFrontBar2.addBox(0F, 0F, 0F, 1, 1, 8);
		TopFrontBar2.setRotationPoint(7.5F, 23F, -4F);
		TopFrontBar2.setTextureSize(190, 32);
		TopFrontBar2.mirror = true;
		setRotation(TopFrontBar2, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);

		UpRight.render(f5);
		UpLeft.render(f5);
		BottomRight.render(f5);
		BottomLeft.render(f5);
		TopFrontBar.render(f5);
		LeftFrontBar.render(f5);
		LeftUpFrontBarOne.render(f5);
		LeftUpFrontBarTwo.render(f5);
		LeftBottomFrontBarOne.render(f5);
		UpRight2.render(f5);
		UpRight3.render(f5);
		UpRight4.render(f5);
		UpRight5.render(f5);
		LeftUpFrontBarTwo2.render(f5);
		LeftUpFrontBarOne3.render(f5);
		LeftFrontBar2.render(f5);
		LeftBottomFrontBarOne2.render(f5);
		LeftUpFrontBarOne2.render(f5);
		LeftUpFrontBarTwo3.render(f5);
		TopFrontBar2.render(f5);
	}

	public void renderPipe(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		Right2.render(f5);
		Right3.render(f5);
		Bottom.render(f5);
		Top.render(f5);
		Right.render(f5);
		Left.render(f5);
		LeftPannel.render(f5);
		RightPannel.render(f5);
		TopPannel.render(f5);
		BottomPannel.render(f5);
		TopPannel2.render(f5);
		BottomPannel2.render(f5);
		RightPannel2.render(f5);
		RightPannel3.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
